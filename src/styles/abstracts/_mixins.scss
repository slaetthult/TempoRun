@use '../abstracts/_config' as *;

/* -------------------------------------------------------- */
/*                PLUG AND PLAY STYLE MIXINS                */
/* -------------------------------------------------------- */

// DEFINING THE MEDIA VIEWPORT
@mixin viewport($viewportName) {
    @media screen and (min-width: map-get($viewports, $viewportName)) {
        @content;
    }
}

@mixin manual-viewport($minWidth) {
    @media screen and (min-width: $minWidth) {
        @content;
    }
}

// SET HYPHENS MODE
@mixin hyphens($mode) {
    -webkit-hyphens:      $mode;
    -moz-hyphens:         $mode;
    -ms-hyphens:          $mode;
    hyphens:              $mode;

    @if $mode == auto {
        word-break: break-word;
    }

}

// NORMAL CLEARFIX FOR DESTROY FLOATS
@mixin clearfix {
    &::before,
    &::after {
        content: "";
        display: table;
    }
    &::after {
        clear: both;
    }
}

// ADD FLEX POWER
@mixin flex($direction: row, $wrap: nowrap) {
    display: -webkit-flex;
    display: -ms-flexbox;
    display: flex;

    @if $direction == row-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: horizontal;
        -moz-box-direction: reverse;
        -moz-box-orient: horizontal;
    } @else if $direction == column {
        -webkit-box-direction: normal;
        -webkit-box-orient: vertical;
        -moz-box-direction: normal;
        -moz-box-orient: vertical;
    } @else if $direction == column-reverse {
        -webkit-box-direction: reverse;
        -webkit-box-orient: vertical;
        -moz-box-direction: reverse;
        -moz-box-orient: vertical;
    } @else {
        -webkit-box-direction: normal;
        -webkit-box-orient: horizontal;
        -moz-box-direction: normal;
        -moz-box-orient: horizontal;
    }

    -webkit-flex-direction: $direction;
    -ms-flex-direction: $direction;
    flex-direction: $direction;

    -webkit-flex-wrap: $wrap;
    @if $wrap == nowrap {
        -ms-flex-wrap: none;
    } @else {
        -ms-flex-wrap: $wrap;
    }
    flex-wrap: $wrap;

}

@mixin smooth-fading-effect($transitionStyle: ease-in-out){
    display: block;
    visibility: hidden;
    opacity: 0;
    transition: visibility 0s, opacity $transitionTime $transitionStyle;
    transition-delay: $transitionTime, 0s;

    &.show {
        visibility: visible;
        opacity: 1;
        transition-delay: 0s, 0s;
    }
}